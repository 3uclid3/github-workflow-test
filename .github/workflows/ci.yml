---
name: CI

on:
  push:

jobs:
  create-matrix-from-file:
    name: Read TARGETS file
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - id: set-matrix
        run: |
          json="{\"target\":["
          lines=$(cat .TARGETS)
          for line in $lines
          do
            json="$json $line,"
          done

          # Remove last "," and add closing brackets
          if [[ $json == *, ]]; then
            json="${json%?}"
          fi
          json="$json]}"
          echo $json

          # Set output
          echo "matrix=$( echo "$json" )" >> $GITHUB_OUTPUT

  build:
    name: Build
    runs-on: ubuntu-22.04
    needs: [create-matrix-from-file]

    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.create-matrix-from-file.outputs.matrix)}}

    steps:
      - name: Read .env
        uses: falti/dotenv-action@v1.0.4

      - name: Checkout
        uses: actions/checkout@v3

      - name: Build
        run: sudo sh ./build.sh -t ${{ matrix.target }} -o ${{ env.OUTPUT_PATH }} --binutils ${{ env.BINUTILS_VERSION }} --gdb ${{ env.GDB_VERSION }} --gcc ${{ env.GCC_VERSION }}
                
      - name: Update Artifact
        uses: actions/upload-artifact@v3
        with:
          name: cross-compiler
          path: /home/cross-compiler/${{ matrix.target }}

          
  release:
    name: Release
    runs-on: ubuntu-22.04
    needs: [build]
          
    steps:

      - name: Download Artifact
        uses: actions/upload-artifact@v3
        with:
          name: cross-compiler
          
      - name: Release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          generate_release_notes: true
          draft: false
          prerelease: false
